{"version":3,"sources":["c:/Users/1001hz/Documents/Development/eros/src/app/auth/auth-routing.module.ts","c:/Users/1001hz/Documents/Development/eros/src/app/auth/auth.module.ts","c:/Users/1001hz/Documents/Development/eros/src/app/auth/forgot-password/forgot-password.component.html","c:/Users/1001hz/Documents/Development/eros/src/app/auth/forgot-password/forgot-password.component.scss","c:/Users/1001hz/Documents/Development/eros/src/app/auth/forgot-password/forgot-password.component.ts","c:/Users/1001hz/Documents/Development/eros/src/app/auth/login/login.component.css","c:/Users/1001hz/Documents/Development/eros/src/app/auth/login/login.component.html","c:/Users/1001hz/Documents/Development/eros/src/app/auth/login/login.component.ts","c:/Users/1001hz/Documents/Development/eros/src/app/auth/reset-password/reset-password.component.html","c:/Users/1001hz/Documents/Development/eros/src/app/auth/reset-password/reset-password.component.scss","c:/Users/1001hz/Documents/Development/eros/src/app/auth/reset-password/reset-password.component.ts","c:/Users/1001hz/Documents/Development/eros/src/app/auth/signup/signup.component.html","c:/Users/1001hz/Documents/Development/eros/src/app/auth/signup/signup.component.scss","c:/Users/1001hz/Documents/Development/eros/src/app/auth/signup/signup.component.ts"],"names":[],"mappings":"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","file":"auth.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { ResetPasswordGuard } from '../core/guards/reset-password.guard';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'forgot-password', component: ForgotPasswordComponent },\n  { path: 'reset-password/:token', component: ResetPasswordComponent, canActivate: [ResetPasswordGuard] },\n  { path: '**', redirectTo: 'login'}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// c:/Users/1001hz/Documents/Development/eros/src/app/auth/auth-routing.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    LoginComponent,\n    SignupComponent,\n    ForgotPasswordComponent,\n    ResetPasswordComponent\n  ],\n  providers: [\n  ]\n})\nexport class AuthModule { }\n\n\n\n// WEBPACK FOOTER //\n// c:/Users/1001hz/Documents/Development/eros/src/app/auth/auth.module.ts","module.exports = \"<mat-card>\\n  <mat-card-title>\\n    Forgot Password\\n  </mat-card-title>\\n  <mat-card-subtitle>\\n    Fill in your email to get a link to reset your password sent to you.\\n  </mat-card-subtitle>\\n  <form *ngIf=\\\"!requestSent\\\" [formGroup]=\\\"resetLinkForm\\\" (ngSubmit)=\\\"onRequestResetLink(resetLinkForm.value)\\\">\\n    <div>\\n      <mat-form-field class=\\\"\\\">\\n        <input matInput placeholder=\\\"Enter your email\\\" value=\\\"\\\" [formControl]=\\\"resetLinkForm.controls['email']\\\">\\n        <mat-error *ngIf=\\\"resetLinkForm.controls['email'].hasError('required') && resetLinkForm.controls['email'].touched\\\">This field is required</mat-error>\\n        <mat-error *ngIf=\\\"resetLinkForm.controls['email'].hasError('email') && resetLinkForm.controls['email'].touched\\\">This is not a valid email</mat-error>\\n      </mat-form-field>\\n    </div>\\n    <div>\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!resetLinkForm.valid || sending\\\">Send password reset link</button>\\n    </div>\\n  </form>\\n\\n  <mat-card-content *ngIf=\\\"requestSent\\\">You should receive an email with a link to reset your password shortly.</mat-card-content>\\n</mat-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Users/1001hz/Documents/Development/eros/src/app/auth/forgot-password/forgot-password.component.html\n// module id = ../../../../../src/app/auth/forgot-password/forgot-password.component.html\n// module chunks = auth.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Users/1001hz/Documents/Development/eros/src/app/auth/forgot-password/forgot-password.component.scss\n// module id = ../../../../../src/app/auth/forgot-password/forgot-password.component.scss\n// module chunks = auth.module","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../core/services/auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  public requestSent: boolean;\n  public sending: boolean;\n  public resetLinkForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService\n  ) {\n  }\n\n  ngOnInit() {\n    this.requestSent = false;\n    this.sending = false;\n    this.resetLinkForm = this.fb.group({\n      'email': ['', [Validators.required, Validators.email]]\n    });\n  }\n\n  onRequestResetLink(value) {\n    this.sending = true;\n\n    this.authService.resetPasswordLink(value.email).subscribe( (successFlag:boolean)=> {\n      this.requestSent = successFlag;\n    },\n      () => {},\n      () => {\n        this.sending = false;\n      }\n    )\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// c:/Users/1001hz/Documents/Development/eros/src/app/auth/forgot-password/forgot-password.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Users/1001hz/Documents/Development/eros/src/app/auth/login/login.component.css\n// module id = ../../../../../src/app/auth/login/login.component.css\n// module chunks = auth.module","module.exports = \"<section class=\\\"section section--app\\\">\\n  <div class=\\\"grid-wrap\\\">\\n    <div class=\\\"grid-row\\\">\\n\\n      <mat-card>\\n        <mat-card-title>\\n          Login\\n        </mat-card-title>\\n        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onLogin(loginForm.value)\\\" class=\\\"form\\\">\\n          <div>\\n            <mat-form-field class=\\\"\\\">\\n              <input matInput placeholder=\\\"Enter your email\\\" value=\\\"\\\" id=\\\"email\\\" [formControl]=\\\"loginForm.controls['email']\\\">\\n              <mat-error *ngIf=\\\"loginForm.controls['email'].hasError('required') && loginForm.controls['email'].touched\\\">This field is required</mat-error>\\n              <mat-error *ngIf=\\\"loginForm.controls['email'].hasError('email') && loginForm.controls['email'].touched\\\">This is not a valid email</mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div>\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Enter your password\\\" [type]=\\\"'password'\\\" id=\\\"password\\\" [formControl]=\\\"loginForm.controls['password']\\\">\\n              <mat-error *ngIf=\\\"loginForm.controls['password'].hasError('required') && loginForm.controls['password'].touched\\\">This field is required</mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div>\\n            <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!loginForm.valid || (authState$ | async).loggingIn\\\">Login</button>\\n          </div>\\n          <div class=\\\"form__cta-link form__item\\\">\\n            <a routerLink=\\\"../forgot-password\\\" routerLinkActive=\\\"active\\\">Forgot password?</a>\\n          </div>\\n        </form>\\n      </mat-card>\\n\\n    </div>\\n  </div>\\n</section>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Users/1001hz/Documents/Development/eros/src/app/auth/login/login.component.html\n// module id = ../../../../../src/app/auth/login/login.component.html\n// module chunks = auth.module","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../core/services/auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ILoginRequest } from '../../shared/interfaces/login-request.interface';\nimport { Store } from '@ngrx/store';\nimport { IAuthState } from '../../shared/state/auth.state';\n\ninterface AuthState {\n  auth: IAuthState\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public loading: boolean;\n  public loginForm: FormGroup;\n  private authState$;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private store: Store<AuthState>\n  ) {\n    this.authState$ = this.store.select('auth');\n  }\n\n  ngOnInit() {\n    this.loading = false;\n    this.loginForm = this.fb.group({\n      'email': ['', [Validators.required, Validators.email]],\n      'password': ['', Validators.required]\n    });\n  }\n\n  onLogin(value: any) {\n    let loginRequest: ILoginRequest = {\n      email: value.email,\n      password: value.password\n    };\n    this.authService.login(loginRequest);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// c:/Users/1001hz/Documents/Development/eros/src/app/auth/login/login.component.ts","module.exports = \"<p>\\n  reset-password works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Users/1001hz/Documents/Development/eros/src/app/auth/reset-password/reset-password.component.html\n// module id = ../../../../../src/app/auth/reset-password/reset-password.component.html\n// module chunks = auth.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Users/1001hz/Documents/Development/eros/src/app/auth/reset-password/reset-password.component.scss\n// module id = ../../../../../src/app/auth/reset-password/reset-password.component.scss\n// module chunks = auth.module","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../core/services/auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  public resetPasswordForm: FormGroup;\n  public sending: boolean;\n  public resetToken: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.route.params.subscribe( (params)=> {\n      this.resetToken = params[\"token\"];\n    })\n  }\n\n  ngOnInit() {\n    this.sending = false;\n    this.resetPasswordForm = this.fb.group({\n      'password': ['', Validators.required],\n      'confirm': ['', Validators.required]\n    });\n  }\n\n  onResetPassword(value) {\n    this.sending = true;\n\n    this.authService.resetPassword(value.password, this.resetToken).subscribe( (successFlag)=> {\n        this.router.navigate(['login']);\n      },\n      () => {},\n      () => {\n        this.sending = false;\n      }\n    )\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// c:/Users/1001hz/Documents/Development/eros/src/app/auth/reset-password/reset-password.component.ts","module.exports = \"<section class=\\\"section section--app\\\">\\n  <div class=\\\"grid-wrap\\\">\\n    <div class=\\\"grid-row\\\">\\n\\n      <mat-card>\\n        <mat-card-title>\\n          Signup\\n        </mat-card-title>\\n        <form [formGroup]=\\\"signUpForm\\\" (ngSubmit)=\\\"onSignUp(signUpForm.value)\\\">\\n          <div>\\n            <mat-form-field class=\\\"\\\">\\n              <input matInput placeholder=\\\"Enter your email\\\" value=\\\"\\\"  id=\\\"email\\\" [formControl]=\\\"signUpForm.controls['email']\\\">\\n              <mat-error *ngIf=\\\"signUpForm.controls['email'].hasError('required') && signUpForm.controls['email'].touched\\\">This field is required</mat-error>\\n              <mat-error *ngIf=\\\"signUpForm.controls['email'].hasError('email') && signUpForm.controls['email'].touched\\\">This is not a valid email</mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div>\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Enter your password\\\" [type]=\\\"'password'\\\" id=\\\"password\\\" [formControl]=\\\"signUpForm.controls['password']\\\">\\n              <mat-error *ngIf=\\\"signUpForm.controls['password'].hasError('required') && signUpForm.controls['password'].touched\\\">This field is required</mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div>\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Confirm your password\\\" [type]=\\\"'password'\\\" id=\\\"confirm\\\" [formControl]=\\\"signUpForm.controls['confirm']\\\">\\n              <mat-error *ngIf=\\\"signUpForm.controls['confirm'].hasError('required') && signUpForm.controls['confirm'].touched\\\">This field is required</mat-error>\\n              <mat-error *ngIf=\\\"signUpForm.controls['confirm'].value !== signUpForm.controls['password'].value && signUpForm.controls['password'].touched\\\">The passwords don't match</mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div>\\n            <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!signUpForm.valid || loading\\\">Signup</button>\\n          </div>\\n        </form>\\n      </mat-card>\\n\\n    </div>\\n  </div>\\n</section>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Users/1001hz/Documents/Development/eros/src/app/auth/signup/signup.component.html\n// module id = ../../../../../src/app/auth/signup/signup.component.html\n// module chunks = auth.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Users/1001hz/Documents/Development/eros/src/app/auth/signup/signup.component.scss\n// module id = ../../../../../src/app/auth/signup/signup.component.scss\n// module chunks = auth.module","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../core/services/auth.service';\nimport { ISignUpRequest } from '../../shared/interfaces/signup-request.interface';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  public loading: boolean;\n  public signUpForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService\n  ) {\n  }\n\n  ngOnInit() {\n    this.signUpForm = this.fb.group({\n      'email': ['', [Validators.required, Validators.email]],\n      'password': ['', Validators.required],\n      'confirm': ['', Validators.required],\n    });\n  }\n\n  onSignUp(value: any) {\n    let signupRequest: ISignUpRequest = {\n      email: value.email,\n      password: value.password\n    };\n    this.authService.signup(signupRequest);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// c:/Users/1001hz/Documents/Development/eros/src/app/auth/signup/signup.component.ts"],"sourceRoot":"webpack:///"}